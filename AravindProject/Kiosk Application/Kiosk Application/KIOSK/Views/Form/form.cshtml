@model KIOSK.Models.form
@using System.Configuration;
@using KIOSK.Models
@{
    Layout = null;
}
@{
    Entities3 db = new Entities3();

    String url1 = ConfigurationManager.AppSettings["gettalukcode"];
    List<SelectListItem> agentdropdownlistdata = new List<SelectListItem>();
    bool isSelected = false;
    foreach (var item in db.Taluk_Master)
    {
        agentdropdownlistdata.Add(new SelectListItem
        {
            Text = item.TALUK_NAME.ToString(),
            Value = item.TALUK_CODE.ToString(),
            Selected = isSelected
        });

    }
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "S/O",
        Value = "S/O",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "D/O",
        Value = "D/O",

    });
    listItems.Add(new SelectListItem
    {
        Text = "F/O",
        Value = "F/O"
    });
    listItems.Add(new SelectListItem
    {
        Text = "W/O",
        Value = "W/O"
    });
    listItems.Add(new SelectListItem
    {
        Text = "H/O",
        Value = "H/O"
    });
    listItems.Add(new SelectListItem
    {
        Text = "M/O",
        Value = "M/O"
    });
    listItems.Add(new SelectListItem
    {
        Text = "C/O",
        Value = "C/O"
    });
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>PatientRegistrationForm</title>
    <script type="text/javascript" src="~/Scripts/jquery-1.11.1.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.ui.datepicker.js"></script>
    <!--<script type="text/javascript" src="~/Scripts/jquery.mobile.datepicker.js"></script>-->
    <link href="~/Content/jquery.mobile.datepicker.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.keyboard.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.mousewheel.js"></script>
    <script type="text/javascript" src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-ui.js"></script>
    <!--<script type="text/javascript" src="~/Scripts/Mykeyboard.js"></script>-->
    <script type="text/javascript" src="~/Scripts/jquery.searchabledropdown-1.0.8.src.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.mailtip.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery-birthday-picker.js"></script>
    <link rel="stylesheet" href='~/Content/bootstrap.css' />
    <link rel="stylesheet" href='~/Content/jquery-ui.css' />
    <link rel="stylesheet" href='~/Content/datepicker.css' />
    <link rel="stylesheet" href="~/Content/keyboard.css" />
    <link rel="stylesheet" href="~/Content/font-awesome.css" />
    <link rel="stylesheet" href="~/Content/mailtip.css" />
    <link rel="stylesheet" href="~/Content/keyboard-previewkeyset.css" />




    <style>
        body {
            background: #efefef url(gray_jean.png);
        }
        
        
        #ui-preview {
            border: 5px solid #ddd;
            margin: 30px;
            background: #fff;
            padding: 0 0 20px;
        }

            #ui-preview h1 {
                background: #000;
                font-size: 23px;
                color: #fff;
                padding: 10px 0 10px 20px;
                margin: 0 0 20px;
            }

        legend {
            width: auto;
            border-bottom: none;
            padding: 0 10px;
            margin-bottom: 0;
            color: #00CBCB;
            position: relative;
            top: -5px;
        }

        fieldset {
            padding: 0.35em 0.625em 0.75em !important;
            margin: 0 2px 10px !important;
            border: 1px solid #c0c0c0 !important;
            background: #fafafa;
        }

        .form-group {
            margin: 0 10px;
        }

        label {
            display: inline-block;
            margin-bottom: 5px;
            font-weight: bold;
            color: black;
            font-family: monospace;
            font-size: 15px;
        }

        .form-group select {
            margin: 0 0 10px;
        }
       .radio + .radio, .checkbox + .checkbox {
    margin-top: 0px;
}
       .radio, .checkbox
       {
           margin-top:0px;
       }
       select.ui-datepicker-month{
           text-indent:0px;
       }
        select.ui-datepicker-year{
           text-indent:0px;
       }
        .checkbox{
            margin-top:0px;
        }
        .btn-green {
            text-shadow: 0 -1px 0 #669E00;
            color: #fff;
            border: 1px solid #669E00;
            background: rgb(143,196,0); /* Old browsers */
            background: -moz-linear-gradient(top, rgba(143,196,0,1) 0%, rgba(107,165,0,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(143,196,0,1)), color-stop(100%,rgba(107,165,0,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top, rgba(143,196,0,1) 0%,rgba(107,165,0,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top, rgba(143,196,0,1) 0%,rgba(107,165,0,1) 100%); /* Opera 11.10+ */
            background: linear-gradient(top, rgba(143,196,0,1) 0%,rgba(107,165,0,1) 100%); /* W3C */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8fc400', endColorstr='#6ba500',GradientType=0 ); /* IE6-9 */
        }

            .btn-green:hover {
                text-shadow: 0 1px 0 #669E00;
                border: 1px solid #669E00;
                background: rgb(198,226,120); /* Old browsers */
                background: -moz-linear-gradient(top, rgba(198,226,120,1) 0%, rgba(167,211,44,1) 100%); /* FF3.6+ */
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(198,226,120,1)), color-stop(100%,rgba(167,211,44,1))); /* Chrome,Safari4+ */
                background: -webkit-linear-gradient(top, rgba(198,226,120,1) 0%,rgba(167,211,44,1) 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, rgba(198,226,120,1) 0%,rgba(167,211,44,1) 100%); /* Opera 11.10+ */
                background: linear-gradient(top, rgba(198,226,120,1) 0%,rgba(167,211,44,1) 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#c6e278', endColorstr='#a7d32c',GradientType=0 ); /* IE6-9 */
            }

        .btn-orange {
            text-shadow: 0 -1px 0 #FC730A;
            color: #fff;
            border: 1px solid #FC730A;
            background: rgb(255,168,76); /* Old browsers */
            background: -moz-linear-gradient(top, rgba(255,168,76,1) 0%, rgba(255,123,13,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(255,168,76,1)), color-stop(100%,rgba(255,123,13,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top, rgba(255,168,76,1) 0%,rgba(255,123,13,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top, rgba(255,168,76,1) 0%,rgba(255,123,13,1) 100%); /* Opera 11.10+ */
            background: linear-gradient(top, rgba(255,168,76,1) 0%,rgba(255,123,13,1) 100%); /* W3C */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffa84c', endColorstr='#ff7b0d',GradientType=0 ); /* IE6-9 */
        }

            .btn-orange:hover {
                text-shadow: 0 1px 0 #FC730A;
                border: 1px solid #FC730A;
                background: rgb(249,191,74); /* Old browsers */
                background: -moz-linear-gradient(top, rgba(249,191,74,1) 0%, rgba(249,181,9,1) 100%); /* FF3.6+ */
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(249,191,74,1)), color-stop(100%,rgba(249,181,9,1))); /* Chrome,Safari4+ */
                background: -webkit-linear-gradient(top, rgba(249,191,74,1) 0%,rgba(249,181,9,1) 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, rgba(249,191,74,1) 0%,rgba(249,181,9,1) 100%); /* Opera 11.10+ */
                background: linear-gradient(top, rgba(249,191,74,1) 0%,rgba(249,181,9,1) 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f9bf4a', endColorstr='#f9b509',GradientType=0 ); /* IE6-9 */
            }

        .btn-blue {
            text-shadow: 0 -1px 0 #1D6DC1;
            color: #fff;
            border: 1px solid #1D6DC1;
            background: rgb(122,188,255); /* Old browsers */
            background: -moz-linear-gradient(top, rgba(122,188,255,1) 0%, rgba(96,171,248,1) 44%, rgba(64,150,238,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(122,188,255,1)), color-stop(44%,rgba(96,171,248,1)), color-stop(100%,rgba(64,150,238,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top, rgba(122,188,255,1) 0%,rgba(96,171,248,1) 44%,rgba(64,150,238,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top, rgba(122,188,255,1) 0%,rgba(96,171,248,1) 44%,rgba(64,150,238,1) 100%); /* Opera11.10+ */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#7abcff', endColorstr='#4096ee',GradientType=0 ); /* IE6-9 */
            background: linear-gradient(top, rgba(122,188,255,1) 0%,rgba(96,171,248,1) 44%,rgba(64,150,238,1) 100%); /* W3C */
        }

            .btn-blue:hover {
                text-shadow: 0 1px 0 #1D6DC1;
                border: 1px solid #1D6DC1;
                background: rgb(155,205,255); /* Old browsers */
                background: -moz-linear-gradient(top, rgba(155,205,255,1) 0%, rgba(134,192,250,1) 44%, rgba(110,176,242,1) 100%); /* FF3.6+ */
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(155,205,255,1)), color-stop(44%,rgba(134,192,250,1)), color-stop(100%,rgba(110,176,242,1))); /* Chrome,Safari4+ */
                background: -webkit-linear-gradient(top, rgba(155,205,255,1) 0%,rgba(134,192,250,1) 44%,rgba(110,176,242,1) 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, rgba(155,205,255,1) 0%,rgba(134,192,250,1) 44%,rgba(110,176,242,1) 100%); /* Opera 11.10+ */
                background: linear-gradient(top, rgba(155,205,255,1) 0%,rgba(134,192,250,1) 44%,rgba(110,176,242,1) 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#9bcdff', endColorstr='#6eb0f2',GradientType=0 ); /* IE6-9 */
            }

        .inp-data input[type="text"], textarea, select {
            display: inline-block;
            vertical-align: middle;
            width: 90%;
            zoom: 1;
            margin: 0;
            border: 1px solid #ccc;
            font-size: 1em;
            padding: 5px 0;
            text-indent: 13px;
            -moz-border-radius: 5px;
            -webkit-border-radius: 5px;
            border-radius: 5px;
            background: #fff;
            -moz-box-shadow: inset 0 0 6px #ccc;
            -webkit-box-shadow: inset 0 1px 6px #ccc;
            box-shadow: inset 0 1px 6px #ccc; 
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
        }

        .inp-data {
            margin: 0 0 15px;
        }

        .signout {
            background: url(logout-icon.png) no-repeat;
            height: 24px;
            float: right;
            position: absolute;
            top: 45px;
            right: 52px;
            color: #fff;
            /* display: inherit; */
            font-size: 20px;
            padding: 0 0 0 28px;
        }

            .signout a {
                color: #fff;
            }

                .signout a:hover {
                    text-decoration: none;
                }

        .error {
            color: red;
            font-size: 12px;
        }

        .topright {
            position: absolute;
            top: 8px;
            right: 16px;
            font-size: 18px;
        }

        .myclassborder {
            border: 4px solid #f00;
        }

        .field-validation-error {
            color: #f00;
            clear:both;
            display:block;
        }

        .field-validation-valid {
            display: none;
        }

        .input-validation-error {
            border: 1px solid #f00;
            background-color: #fee;
        }

        .validation-summary-errors {
            font-weight: bold;
            color: #f00;
        }

        .ui-autocomplete {
            max-height: 100px;
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
        }
    </style>
    <script>
       function agetodob() {
           var x = document.getElementById("age");
           //alert(x.value);
           //x.value = x.value.toUpperCase();
          var d = new Date();
           var month = d.getMonth() + 1;
           var day = d.getDate();

           var output = d.getFullYear() + '/' +
               (month < 10 ? '0' : '') + month + '/' +
               (day < 10 ? '0' : '') + day;
           var year = output.substring(0, 4);
           var query = x.value;
         //  alert(query);
           //alert(year - query);
           var check = year - query;
           if (x.value == '')
           {
               $('#DOB').val('');
           }
           else if (check > 0 && x.value <= 150)
               $('#DOB').val('01/01/' + (year - query).toString());
           else {
               $("#age").val('');
               $('#DOB').val('');
           }
       }
       function dobtoage()
       {
           var x = document.getElementById('DOB');
          var d= x.value;

             // alert(x.value);
              var today = new Date();
              var dd = Number(today.getDate());
              var mm = Number(today.getMonth() + 1);

              var yyyy = Number(today.getFullYear());


              var myBDM = Number(x.value.split("/")[1])
              var myBDD = Number(x.value.split("/")[0])
              var myBDY = Number(x.value.split("/")[2])
             // alert(myBDM + "," + myBDD + "," + myBDY);
              var age = yyyy - myBDY;

              if (mm < myBDM) {
                  age = age - 1;
              }
              else if (mm == myBDM && dd < myBDD) {
                  age = age - 1;
              }
              if (age >=0 && age <= 150&&myBDM<13)
                  $('#age').val(age);
              else
                  $('#age').val("");

       }
       (function ($) {

          $.widget("custom.combobox", {

              _create: function () {
                  this.wrapper = $("<span>")
                    .addClass("custom-combobox")
                    .insertAfter(this.element)

                  this.element.hide();
                  this._createAutocomplete();
                 // this._createShowAllButton();

              },

              _createAutocomplete: function () {
                  var selected = this.element.children(":selected"),
                    value = selected.val() ? selected.text() : "";

                  this.input = $("<input type=\"text\">")
                    .appendTo(this.wrapper)
                    .val(value)
                    .attr("title", "")
                    .addClass("form-control col-sm-2 ")
                    .autocomplete({
                        delay: 0,
                        minLength: 0,

                        source: $.proxy(this, "_source")
                    })

                    .tooltip({
                        tooltipClass: "ui-state-highlight"
                    });

                  this._on(this.input, {
                      autocompleteselect: function (event, ui) {

                        //  alert(ui.item.option.value);
                          var url = "@Html.Raw(HttpUtility.JavaScriptStringEncode(url1))";
                          //alert(url);
                          var district = "";
                          var state = "";
                          var country = "";
                          var pos = "";
                          //alert("called");

                          // var conceptName = $('#combobox').val();
                          var conceptName = ui.item.option.value;
                          // alert(conceptName);
                          if (conceptName == "") {
                              // alert(conceptName);
                              //$('#district').attr("disabled", "disabled");
                              $('#district').val("");
                              //$('#state').attr("disabled", "disabled");
                              $('#state').val("");
                              // $('#country').attr("disabled", "disabled");
                              $('#country').val("");
                          }
                          else {
                              //alert(url+conceptName);

                              $.ajax({
                                  url: url + conceptName,
                                  crossOrgin: true,	// use jsonp for cross origin request
                                  dataType: 'json',
                                  type: 'GET',
                                  success: function (data) {
                                      for (var i = 0; i < data.length; i++) {
                                          if (data[i] != '$') {
                                              district = district + data[i];

                                          }
                                          else {
                                              pos = i;
                                              break;
                                          }
                                      }
                                      for (var i = pos + 1; i < data.length; i++) {
                                          if (data[i] != '$') {
                                              state = state + data[i];
                                          }
                                          else {
                                              pos = i;
                                              break;
                                          }
                                      }
                                      for (var i = pos + 1; i < data.length; i++) {
                                          country = country + data[i];
                                      }
                                      // alert('called');
                                      //alert(state);
                                      //  $('#district').removeAttr("disabled");
                                      // $('#state').removeAttr("disabled");
                                      //$('#country').removeAttr("disabled");
                                      $("#district").prop('readonly', false);
                                      $("#state").prop('readonly', false);
                                      $("#country").prop('readonly', false);
                                      $('#district').val(district.trim());
                                      $('#state').val(state.trim());
                                      $('#country').val(country.trim());
                                      $("#district").prop('readonly', true);
                                      $("#state").prop('readonly', true);
                                      $("#country").prop('readonly', true);
                                      console.log(data);
                                  },
                                  error: function () {
                                      alert('not called');
                                  }
                              });
                              // $('#city').removeAttr("disabled");
                          }
                          ui.item.option.selected = true;
                          this._trigger("select", event, {
                              item: ui.item.option
                          });
                      },

                      autocompletechange: "_removeIfInvalid"
                  });
              },

/*              _createShowAllButton: function () {
                  var input = this.input,
                    wasOpen = false;

                  $("<a>")
                    .attr("tabIndex", -1)
                    .attr("title", "Show All Items")
                    .tooltip()
                    .appendTo(this.wrapper)
                    .button({
                        icons: {
                            primary: "ui-icon-triangle-1-s"
                        },
                        text: false
                    })
                    .removeClass("ui-corner-all")
                    .addClass("custom-combobox-toggle")
                    .mousedown(function () {
                        wasOpen = input.autocomplete("widget").is(":visible");
                    })
                    .click(function () {
                        input.focus();
                      //  alert('sdf'); // Close if already visible
                        if (wasOpen) {
                            return;
                        }

                        // Pass empty string as value to search for, displaying all results
                        input.autocomplete("search", "");
                    });
              },
*/
              _source: function (request, response) {
                  var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                  response(this.element.children("option").map(function () {
                      var text = $(this).text();

                      if (this.value && (!request.term || matcher.test(text)))
                          return {
                              label: text,
                              value: text,
                              option: this
                          };
                  }));
              },

              _removeIfInvalid: function (event, ui) {

                  // Selected an item, nothing to do
                  if (ui.item) {

                      return;
                  }

                  // Search for a match (case-insensitive)
                  var value = this.input.val(),

                    valueLowerCase = value.toLowerCase(),
                    valid = false;
                  this.element.children("option").each(function () {
                      if ($(this).text().toLowerCase() === valueLowerCase) {
                          this.selected = valid = true;
                          return false;
                      }
                  });

                  // Found a match, nothing to do
                  if (valid) {
                      return;
                  }

                  // Remove invalid value
                  this.input
                    .val("")
                    .attr("title", value + " didn't match any item")
                    .tooltip("open");
                  this.element.val("");
                  this._delay(function () {
                      this.input.tooltip("close").attr("title", "");
                  }, 2500);
                  this.input.autocomplete("instance").term = "";
              },

              _destroy: function () {
                  this.wrapper.remove();
                  this.element.show();
              }
          });
      })(jQuery);
       $(function () {
           $('#name').keyup(function () {
               this.value = this.value.toUpperCase();
           });
           $('#kithkin').keyup(function () {
               this.value = this.value.toUpperCase();
           });
           $('#nextofkin').keyup(function () {
               this.value = this.value.toUpperCase();
           });
           $('#city').keyup(function () {
               this.value = this.value.toUpperCase();
           });
           $('#street').keyup(function () {
               this.value = this.value.toUpperCase();
           });
           $('#locality').keyup(function () {
               this.value = this.value.toUpperCase();
           });
           $('#email').keyup(function () {
               this.value = this.value.toLowerCase();
           });
       });
      $(function () {
          $("#combobox").combobox();
          $("#toggle").click(function () {
              $("#combobox").toggle();
          });
      });
       jQuery.fn.preventDoubleSubmission = function () {
           $(this).on('submit', function (e) {
               var $form = $(this);

               if ($form.data('submitted') === true) {
                   // Previously submitted - don't submit again
                   e.preventDefault();
               } else {
                   // Mark it so that the next submit can be ignored
                   $form.data('submitted', true);
               }
           });

           // Keep chainability
           return this;
       };
       $(document).ready(function () {

           $('form').preventDoubleSubmission();
           $("#district").prop('readonly', true);
           $("#state").prop('readonly', true);
           $("#country").prop('readonly', true);

           $(window).keydown(function (event) {
               if (event.keyCode == 13) {
                   event.preventDefault();
                   return false;
               }
           });
           /* $('#name').keypress(function (e) {

                if ((e.which < 97 || e.which > 122) && (e.which < 65 || e.which > 90)&&e.which!=8&&e.which!=0&&e.which!=32&&e.which!=46) { $("#errmsg2").html("Alphabets Only").show().fadeOut("slow"); return false; }
            });
            $('#locality').keypress(function (e) {

                if ((e.which < 97 || e.which > 122) && (e.which < 65 || e.which > 90) && e.which != 8 && e.which != 0 && e.which != 32 && e.which != 46) { $("#errmsg5").html("Alphabets Only").show().fadeOut("slow"); return false; }
            });
            $('#city').keypress(function (e) {

                if (e.which != 8 && e.which != 0 && (e.which < 97 || e.which > 122) && (e.which < 65 || e.which > 90) && e.which != 8 && e.which != 0 && e.which != 32 && e.which != 46) { $("#errmsg3").html("Alphabets Only").show().fadeOut("slow"); return false; }
            });
            $('#nextofkin').keypress(function (e) {

                if (e.which != 8 && e.which != 0 && (e.which < 97 || e.which > 122) && (e.which < 65 || e.which > 90) && e.which != 8 && e.which != 0 && e.which != 32 && e.which != 46&&e.which!=47) { $("#errmsg6").html("Alphabets Only").show().fadeOut("slow"); return false; }
            });
            $("#mobile").keypress(function (e) {
                //if the letter is not digit then display error and don't type anything
                if (e.which != 8 && e.which != 0&&e.which!=43&&e.which!=45 && (e.which < 48 || e.which > 57)) {
                    //display error message
                    $("#errmsg").html("Digits Only").show().fadeOut("slow");
                    return false;
                }
            });
            $("#landline").keypress(function (e) {
                //if the letter is not digit then display error and don't type anything
                if (e.which != 8 && e.which != 0&&e.which!=43&&e.which!=45 && (e.which < 48 || e.which > 57)) {
                    //display error message
                    $("#errmsg1").html("Digits Only").show().fadeOut("slow");
                    return false;
                }
            });
            $("#pin").keypress(function (e) {
                //if the letter is not digit then display error and don't type anything
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    //display error message
                    $("#errmsg4").html("Digits Only").show().fadeOut("slow");
                    return false;
                }
            });
            $("#age").keypress(function (e) {
                //if the letter is not digit then display error and don't type anything
                if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                    //display error message
                    $("#errmsg7").html("Digits Only").show().fadeOut("slow");
                    return false;
                }
            });*/

       });

       function f2() {
           b2.disabled = true;
       }





       $(function () {

           $('#DOB').datepicker({
               dateFormat: 'dd/mm/yy',
               changeMonth: true,
               changeYear: true,

               yearRange: '1900:+0',
               maxDate: new Date,
               onSelect: function (selected, evnt) {
                   //alert(selected);
                   var v = $('#DOB').val();
                   var today = new Date();
                   var dd = Number(today.getDate());
                   var mm = Number(today.getMonth() + 1);

                   var yyyy = Number(today.getFullYear());


                   var myBDM = Number(v.split("/")[1])
                   var myBDD = Number(v.split("/")[0])
                   var myBDY = Number(v.split("/")[2])
                   var age = yyyy - myBDY;

                   if (mm < myBDM) {
                       age = age - 1;
                   }
                   else if (mm == myBDM && dd < myBDD) {
                       age = age - 1;
                   }

                   $('#age').val(age);
                   $('#kithkin').focus();
               }
           }).on('changeDate', function (ev) {
               var v = $('#DOB').val();
               var today = new Date();
               var dd = Number(today.getDate());
               var mm = Number(today.getMonth() + 1);

               var yyyy = Number(today.getFullYear());


               var myBDM = Number(v.split("/")[1])
               var myBDD = Number(v.split("/")[0])
               var myBDY = Number(v.split("/")[2])
               var age = yyyy - myBDY;

               if (mm < myBDM) {
                   age = age - 1;
               }
               else if (mm == myBDM && dd < myBDD) {
                   age = age - 1;
               }

               $('#age').val(age);
           });

       });




       $("#target").keyup(function () {
           //Fetching the textbox value.
           var query = $(this).val();
           //Calling GetItems method.
           getItems(query);
       });
       $(document).ready(function () {
           $('input[type=radio]').click(function () {
               // alert(this.value);
               $("#targetUL").find("li").remove();
               $("#targetUL").remove();
           });
       });


       function GetDateDiff(date1, date2) {

           return Math.floor(Math.abs((date1.getTime() - date2.getTime()) / (1000 * 60 * 60 * 24)) / 365);

       }
       //This method appends the text oc clicked li element to textbox.
       function appendTextToTextBox(e) {
           //alert(e.textContent);
           //Getting the text of selected li element.
           var textToappend = e.textContent;

           //setting the value attribute of textbox with selected li element.
           $("#target").val(textToappend);
           //Removing the ul element once selected element is set to textbox.
           $("#targetUL").remove();
       }

       $(function () {

           /*  $('#email').mailtip({
                 onselected: function (mail) {

                 }
             });
         });*/
           function f2() {

               $('#nextofkin').attr('placeholder', 'AAAA');
           }
           function f3() {
               $('#nextofkin').attr('placeholder', 'AAAA');
           }
           /*   $().ready(function () {
                  // validate signup form on keyup and submit
                  $("#commentForm").validate({
                      rules: {
                          name:
                          {
                              required:true
                          },

                          mobile:
                          {
                              minlength: 10
                          }, messages: {
                              name:"This field is required",
                              email: "Please enter a valid email address",
                              mobile: "Please enter 10 numbers"
                          }
                      }
                  });
              });*/
           function f5() {
               var url = '@Url.Action("Index1", "Home")';
               window.location.href = url;
           }
           function keyboarddisplay() {

               var txt;
               txt = document.getElementById('combobox').value;
               if (val != 'B') {
                   txt = txt + '' + val;
               }
               else {
                   txt = txt.substr(0, (txt.length) - 1);
               }
               document.getElementById('combobox').value = txt;


           }
       });
    </script>
</head>

<body id="my">

    <div id="ui-preview">
        <h1>New Patient Registration</h1>
        <div style="float: right; color: #fff; margin: -53px 10px 0"><span style="color:red">*</span> Mandatory fields</div>
        <div class="row col-sm-12">
            <div class="col-sm-1" style="width:13%"></div>

            <div class="col-sm-9">


    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "commentForm" }))
    {

        <fieldset>
            <legend>Personal Information</legend>
            <div class="col-sm-12" style="margin:0; padding:0; clear:both">
                <div class="col-sm-2" style="padding:0 0 0 10px; text-align:right">Name<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.name, new { @class = "form-control", @id = "name", @placeholder = "Enter Name", @maxlength = "30", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.name)

                </div>
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Sex<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    <label class="radio col-sm-4">@Html.RadioButtonFor(m => m.sex, "M", new { @onclick = "f2()", @checked = "checked" }) <i class="fa fa-male" style="font-size:25px"><span style="font-size: 13px; font-family: Helvetica Neue,Helvetica,Arial,sans-serif; margin: 5px 0px 0px 10px; float: right;"> Male</span></i> </label>

                    <label class="radio col-sm-5">@Html.RadioButtonFor(m => m.sex, "F", new { @onclick = "f3()" }) <i class="fa fa-female" style="font-size:25px"><span style="font-size: 13px; font-family: Helvetica Neue,Helvetica,Arial,sans-serif; margin: 5px 0px 0px 10px; float: right;">Female</span></i></label>
                    @Html.ValidationMessageFor(model => model.sex)
                </div>
            </div>

            <div class="col-sm-12" style="margin: 0; padding: 0; clear: both">
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Date of Birth<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.dob, new { @class = "form-control datepicker", @id = "DOB", @placeholder = "dd/mm/yyyy", @autocomplete = "off", @onkeyup = "dobtoage()"})
                    @Html.ValidationMessageFor(model => model.dob)
                </div>
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Age<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.age, new { @class = "form-control", @id = "age", @placeholder = "", @maxlength = "3", @autocomplete = "off", @onkeyup = "agetodob()", @tabindex = "-1" })
                    @Html.ValidationMessageFor(model => model.age)
                </div>
            </div>


            <div class="col-sm-12" style="margin: 0; padding: 0; clear: both">
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Relative Name<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">

                    @Html.DropDownListFor(m => m.relation, listItems, new { @id = "kithkin", @class = "btn btn-default dropdown-toggle", style = "width: 25%; float: left; margin: 0 10px 0 0; padding: 6px 0;text-indent:0px" })
                    @Html.TextBoxFor(m => m.nextofkin, new { @class = "form-control", @id = "nextofkin", @placeholder = "AAAA", @maxlength = "26", @autocomplete = "off", style = "width:61%" })
                    @Html.ValidationMessageFor(model => model.nextofkin)
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Address Details</legend>
            <div class="col-sm-12" style="margin:0; padding:0; clear:both">
                <div class="col-sm-2" style="padding:0 0 0 10px; text-align:right">Door No/Street<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.street, new { @class = "form-control", @id = "street", @placeholder = "Enter Door No./Street ", @maxlength = "50", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.street)
                </div>
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Landmark/Village<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.locality, new { @class = "form-control", @id = "locality", @placeholder = "Enter your Landmark / Village", @maxlength = "50", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.locality)
                </div>
            </div>

            <div class="col-sm-12" style="margin: 0; padding: 0; clear: both">
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">City<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.city, new { @class = "form-control", @id = "city", @placeholder = "Enter City", @maxlength = "25", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.city)
                </div>
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Pincode</div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.pin, new { @class = "form-control", @id = "pin", @placeholder = "Enter pincode", @maxlength = "10", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.pin)
                </div>
            </div>




            <div class="col-sm-12" style="margin: 0; padding: 0; clear: both">
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Taluk<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    <!-- Search <input type="text" name="yourTextField" onkeyup="filtery(this.value,this.form.taluk)" onchange="filtery(this.value,this.form.taluk)">-->
                    @Html.DropDownListFor(m => m.taluk, agentdropdownlistdata, "Select Taluk", new { @id = "combobox", @class = "form-control", @onchange = "this.size=1,this.blur(),f1()", @onblur = "this.size=1" })
                    @Html.ValidationMessageFor(model => model.taluk)
                </div>
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">District<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.district, new { @class = "form-control", @id = "district", @placeholder = "Enter district",@style="background:lightgrey" })
                </div>
            </div>
            <div class="col-sm-12" style="margin: 0; padding: 0; clear: both">
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">State<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.state, new { @class = "form-control", @id = "state", @placeholder = "Enter state", @style = "background:lightgrey" })
                </div>
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Country<span style="color:red">*</span></div>
                <div class="col-sm-4 inp-data">


                    @Html.TextBoxFor(m => m.country, new { @class = "form-control", @id = "country", @placeholder = "Enter Country", @style = "background:lightgrey" })
                </div>
            </div>
        </fieldset>


        <fieldset>
            <legend>Contact Details</legend>
            <div class="col-sm-12" style="margin:0; padding:0; clear:both">
                <div class="col-sm-2" style="padding:0 0 0 10px; text-align:right">Phone Number</div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.landline, new { @class = "form-control", @id = "landline", @placeholder = "Enter Landline No.", @maxlength = "30", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.landline)
                </div>

                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Mobile Number</div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.mobile, new { @class = "form-control", @id = "mobile", @placeholder = "Enter Cell Phone No.", @maxlength = "30", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.mobile)
                </div>
            </div>
            <div class="col-sm-12" style="margin: 0; padding: 0; clear: both">
                <div class="col-sm-2" style="padding: 0 0 0 10px; text-align: right">Email</div>
                <div class="col-sm-4 inp-data">
                    @Html.TextBoxFor(m => m.email, new { @class = "form-control", @id = "email", @placeholder = "Enter email", @maxlength = "30", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.email)
                    </div>
                </div>
        </fieldset>
                            <!--<div class="form-group">
                                <label class="control-label col-sm-2" for="Alreadyvisited">Already Visited<span style="color:red">*</span></label>

                                <label class="radio col-sm-1">@Html.RadioButtonFor(m => m.alreadyVisted, "Yes", true)Yes</label>
                                <label class="radio col-sm-1">@Html.RadioButtonFor(m => m.alreadyVisted, "No", false)No</label>

                                @Html.ValidationMessageFor(model => model.alreadyVisted)

                            </div>-->
        //@Html.ActionLink("Submit", "form", "Form", null, new { @id = "b2", @class = "btn btn-primary c5" })
        //@Html.ActionLink("BACK", "Index1", "Home", null, new { @id = "b2", @class = "btn btn-primary c4" })

        <div class="col-sm-12" style="text-align:center; margin:0">
            @Html.ActionLink("BACK", "Sample", "Home", null, new { @id = "b2", @class = "btn btn-primary btn-blue" })

            <button type="submit" class="btn btn-primary btn-blue" name="command" value="submit" onclick="this.disabled = true">SUBMIT</button>
        </div>
            }
        </div>
            <div style="position:absolute; bottom:0; right: 0; padding:10px;">© 2016 powered by Honeywell</div>
                    </div>
       
 </div>

</body>
</html>