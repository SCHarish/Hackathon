@using System.Configuration;
@{
    String url = ConfigurationManager.AppSettings["getquestions"];
    String url1 = ConfigurationManager.AppSettings["feedbackupdate"];
    String adduser = ConfigurationManager.AppSettings["adduser"];
    String removeuser = ConfigurationManager.AppSettings["removeuser"];
    String allusernames = ConfigurationManager.AppSettings["getallusernames"];
    String updateUserPrivilige = ConfigurationManager.AppSettings["updateUserPrivilige"];
    String addQuest = ConfigurationManager.AppSettings["addQuestion"];
    String removequestions = ConfigurationManager.AppSettings["removequestions"];
    String exportfeedback = ConfigurationManager.AppSettings["exportfeedback"];
    String deletequest = ConfigurationManager.AppSettings["deletequestion"];
    String getalllocations = ConfigurationManager.AppSettings["getallzones"];
    String deletezone = ConfigurationManager.AppSettings["Deletezone"];
    String updatezonenames = ConfigurationManager.AppSettings["Updatezones"];
    String addzones = ConfigurationManager.AppSettings["Addzone"];
}
<html>
<head>
    <script type="text/javascript" src="~/scripts/jquery-1.10.2.js"></script>
    <script type="text/javascript" src="~/scripts/bootstrap.js"></script>
    <link rel="stylesheet" href='~/Content/bootstrap.css' />
    <link rel="stylesheet" href="~/Content/font-awesome.css" />
    <style>
             .checkbox-inline.no_indent,
.checkbox-inline.no_indent+.checkbox-inline.no_indent {
  margin-left: 0;
  margin-right: 10px;
}
.checkbox-inline.no_indent:last-child {
  margin-right: 0;
}

        #errmsg {
            color: red;
        }

        .modal-body {
            max-height: calc(100vh - 212px);
            overflow-y: auto;
        }

        body {
            background: #efefef url(gray_jean.png);
        }

        #ui-preview {
            border: 5px solid #ddd;
            margin: 30px;
            background: #fff;
            padding: 0 0 20px;
        }

            #ui-preview h1 {
                background: #000;
                font-size: 23px;
                color: #fff;
                padding: 10px 0 10px 20px;
                margin: 0 0 20px;
            }

        legend {
            width: auto;
            border-bottom: none;
            padding: 0 10px;
            margin-bottom: 0;
        }

        fieldset {
            padding: 0.35em 0.625em 0.75em !important;
            margin: 0 2px 10px !important;
            border: 1px solid #c0c0c0 !important;
        }

        .form-group {
            margin: 0 10px;
        }

        label {
            display: inline-block;
            margin-bottom: 5px;
            font-weight: bold;
            color: black;
            font-family: monospace;
            font-size: 15px;
        }

        .form-group select {
            margin: 0 0 10px;
        }
        .signout {
            background: url("/Pictures/logout-icon.png") no-repeat;
            height: 24px;
            float: right;
            position: absolute;
            top: 45px;
            right: 52px;
            color: #fff;
            /* display: inherit; */
            font-size: 20px;
            padding: 0 0 0 28px;
        }
        .signout a {color:#fff}
            .signout a:hover {
                text-decoration:none
            }

        .btn-green {
            text-shadow: 0 -1px 0 #669E00;
            color: #fff;
            border: 1px solid #669E00;
            background: rgb(143,196,0); /* Old browsers */
            background: -moz-linear-gradient(top, rgba(143,196,0,1) 0%, rgba(107,165,0,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(143,196,0,1)), color-stop(100%,rgba(107,165,0,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top, rgba(143,196,0,1) 0%,rgba(107,165,0,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top, rgba(143,196,0,1) 0%,rgba(107,165,0,1) 100%); /* Opera 11.10+ */
            background: linear-gradient(top, rgba(143,196,0,1) 0%,rgba(107,165,0,1) 100%); /* W3C */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#8fc400', endColorstr='#6ba500',GradientType=0 ); /* IE6-9 */
        }

            .btn-green:hover {
                text-shadow: 0 1px 0 #669E00;
                border: 1px solid #669E00;
                background: rgb(198,226,120); /* Old browsers */
                background: -moz-linear-gradient(top, rgba(198,226,120,1) 0%, rgba(167,211,44,1) 100%); /* FF3.6+ */
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(198,226,120,1)), color-stop(100%,rgba(167,211,44,1))); /* Chrome,Safari4+ */
                background: -webkit-linear-gradient(top, rgba(198,226,120,1) 0%,rgba(167,211,44,1) 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, rgba(198,226,120,1) 0%,rgba(167,211,44,1) 100%); /* Opera 11.10+ */
                background: linear-gradient(top, rgba(198,226,120,1) 0%,rgba(167,211,44,1) 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#c6e278', endColorstr='#a7d32c',GradientType=0 ); /* IE6-9 */
            }

        .btn-orange {
            text-shadow: 0 -1px 0 #FC730A;
            color: #fff;
            border: 1px solid #FC730A;
            background: rgb(255,168,76); /* Old browsers */
            background: -moz-linear-gradient(top, rgba(255,168,76,1) 0%, rgba(255,123,13,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(255,168,76,1)), color-stop(100%,rgba(255,123,13,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top, rgba(255,168,76,1) 0%,rgba(255,123,13,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top, rgba(255,168,76,1) 0%,rgba(255,123,13,1) 100%); /* Opera 11.10+ */
            background: linear-gradient(top, rgba(255,168,76,1) 0%,rgba(255,123,13,1) 100%); /* W3C */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffa84c', endColorstr='#ff7b0d',GradientType=0 ); /* IE6-9 */
        }

            .btn-orange:hover {
                text-shadow: 0 1px 0 #FC730A;
                border: 1px solid #FC730A;
                background: rgb(249,191,74); /* Old browsers */
                background: -moz-linear-gradient(top, rgba(249,191,74,1) 0%, rgba(249,181,9,1) 100%); /* FF3.6+ */
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(249,191,74,1)), color-stop(100%,rgba(249,181,9,1))); /* Chrome,Safari4+ */
                background: -webkit-linear-gradient(top, rgba(249,191,74,1) 0%,rgba(249,181,9,1) 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, rgba(249,191,74,1) 0%,rgba(249,181,9,1) 100%); /* Opera 11.10+ */
                background: linear-gradient(top, rgba(249,191,74,1) 0%,rgba(249,181,9,1) 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f9bf4a', endColorstr='#f9b509',GradientType=0 ); /* IE6-9 */
            }

        .btn-blue {
            text-shadow: 0 -1px 0 #1D6DC1;
            color: #fff;
            border: 1px solid #1D6DC1;
            background: rgb(122,188,255); /* Old browsers */
            background: -moz-linear-gradient(top, rgba(122,188,255,1) 0%, rgba(96,171,248,1) 44%, rgba(64,150,238,1) 100%); /* FF3.6+ */
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(122,188,255,1)), color-stop(44%,rgba(96,171,248,1)), color-stop(100%,rgba(64,150,238,1))); /* Chrome,Safari4+ */
            background: -webkit-linear-gradient(top, rgba(122,188,255,1) 0%,rgba(96,171,248,1) 44%,rgba(64,150,238,1) 100%); /* Chrome10+,Safari5.1+ */
            background: -o-linear-gradient(top, rgba(122,188,255,1) 0%,rgba(96,171,248,1) 44%,rgba(64,150,238,1) 100%); /* Opera11.10+ */
            filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#7abcff', endColorstr='#4096ee',GradientType=0 ); /* IE6-9 */
            background: linear-gradient(top, rgba(122,188,255,1) 0%,rgba(96,171,248,1) 44%,rgba(64,150,238,1) 100%); /* W3C */
        }

            .btn-blue:hover {
                text-shadow: 0 1px 0 #1D6DC1;
                border: 1px solid #1D6DC1;
                background: rgb(155,205,255); /* Old browsers */
                background: -moz-linear-gradient(top, rgba(155,205,255,1) 0%, rgba(134,192,250,1) 44%, rgba(110,176,242,1) 100%); /* FF3.6+ */
                background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(155,205,255,1)), color-stop(44%,rgba(134,192,250,1)), color-stop(100%,rgba(110,176,242,1))); /* Chrome,Safari4+ */
                background: -webkit-linear-gradient(top, rgba(155,205,255,1) 0%,rgba(134,192,250,1) 44%,rgba(110,176,242,1) 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, rgba(155,205,255,1) 0%,rgba(134,192,250,1) 44%,rgba(110,176,242,1) 100%); /* Opera 11.10+ */
                background: linear-gradient(top, rgba(155,205,255,1) 0%,rgba(134,192,250,1) 44%,rgba(110,176,242,1) 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#9bcdff', endColorstr='#6eb0f2',GradientType=0 ); /* IE6-9 */
            }

        .inp-data input[type="text"] {
            display: inline-block;
            vertical-align: middle;
            width: 90%;
            zoom: 1;
            margin: 0;
            border: 1px solid #ccc;
            font-size: 1em;
            padding: 5px 0;
            text-indent: 5px;
            -moz-border-radius: 5px;
            -webkit-border-radius: 5px;
            border-radius: 5px;
            background: #fff;
            -moz-box-shadow: inset 0 0 6px #ccc;
            -webkit-box-shadow: inset 0 1px 6px #ccc;
            /* box-shadow: inset 0 1px 6px #ccc; */
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
        }

        .inp-data {
            margin: 0 0 15px;
        }

        .hand {
            cursor: pointer;
            cursor: hand;
        }

        .my1 {
            width: auto;
            display: inline-block;
        }
        .control-label {
            width:72px; margin:5px 0 0
        }
    </style>
    <script>
        var numberoflocations;
        var userName = [];
        $(function () {

            $('#zoneconfig').on('shown.bs.modal', function () {
                //$("#txtname").focus();
                //alert("cal");
                //$('#zoneCancelButton').hide();
            })
            $('#zoneTextbox').keyup(function () {
                this.value = this.value.toUpperCase();
            });

            $('#zoneTextbox').keyup(function () {
                var check = this.value;
                if (check == '') {
                    document.getElementById("addZoneSubmit").disabled = true;

                }
                else
                {
                    document.getElementById("addZoneSubmit").disabled = false;
                }
            });
        });
        function converttouppercase(id) {
            $('#' + id).val($('#' + id).val().toUpperCase());
          //  document.getElementById(id).value.toUpperCase();
        }
        $(document).ready(function () {
           // $('#Questionsset').show();
         //   $('#Userset').show();
            // $('$Locationset').show();
            $('#myModal').on('show.bs.modal', function () {
                $(this).find('form')[0].reset();
            });
            $('#usrnameAdd').val('');
            $('#pswAdd').val('');
            $('#cancelZoneButton').hide();
            document.getElementById("addZoneSubmit").disabled = true;
            var myVar = localStorage['zone'];
            if (myVar == null) {
                myVar = "Not Available";
            }
            //document.getElementById("zoneinfo").innerHTML = "<h4>Current Location : " + myVar + "</h4>";
            var getalllocations = "@Html.Raw(HttpUtility.JavaScriptStringEncode(getalllocations))";
            $.ajax({
                url: getalllocations,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    size = data.length;
                    numberoflocations = size;
                    for (var i = 1; i < size + 1 ; i++) {
                        document.getElementById("zones").innerHTML += "<option value=\'" + data[i - 1].Zone_Name + "\'>" + data[i - 1].Zone_Name + "</option>";
                        document.getElementById("locationconfiguration").innerHTML += "<div class=\"col-xs-7 col-sm-9 \"><input id=zonequestion" + data[i - 1].Zone_ID + " disabled=\"disabled\" class = \"form-control col-sm-12 \" type=\"text\" maxlength=\"50\" value=\'" + data[i - 1].Zone_Name + "\' onkeyup=converttouppercase(this.id)></div><div id=zoneedit" + data[i - 1].Zone_ID + " onclick=\"\" class=\"fa fa-pencil-square-o hand pull-left myzoneClass \" style=\"font-size:20px\"></div><div id=zoneremove" + data[i - 1].Zone_ID + "  class=\"fa fa-times hand pull-left myzoneClassRemove\" style=\"font-size:20px\"></div><br/><br/><br/>";

                        

                    }
                    // document.getElementById("zones").innerHTML += "<option value=\'" + data[i - 1].Zone_Name + "\'>" + data[i - 1].Zone_Name + "</option>";
                    setLoc(data);

                }, error: function () {

                }
            });


            function setLoc(da)
            {
                //alert(localStorage['zone']);
                var size = da.length;
                for (var i = 1; i < size + 1 ; i++) {
                    //alert(da[i]);
                    if(localStorage['zone']==da[i-1].Zone_Name)
                    {
                        //alert(da[i]);
                        $('select>option:eq('+i+')').prop('selected', true);
                    }

                }
            }
            $('#zoneaddQuestionSubmit').hide();
            $("#zones").change(function () {
                // jQuery
                var selectedVal = $(this).find(':selected').val();
                var selectedText = $(this).find(':selected').text();
                //alert("Your current zone is configured as " + selectedVal);
                if (selectedVal != '')
                    localStorage['zone'] = selectedVal;
                // alert(localStorage['zoneinfo']);
                setTimeout("window.location.reload();", 1000);
            });

            $('#zoneconfig').on('hidden.bs.modal', function () {
                //alert("back");
                /*$.ajax({
                    url: getalllocations,
                    crossOrgin: true,    // use jsonp for cross origin request
                    dataType: 'json',
                    type: 'GET',
                    success: function (data)
                    {

                        for (var i = 1; i < size + 1; i++) {


                            $('#zonequestion' + data[i - 1].Zone_ID).attr("disabled","disabled");
                        }
                    },
                    error: function () {
                        alert('failed');}
                });*/
              location.reload();
            });
            $('#myModalAddZone').on('hidden.bs.modal', function () {

                $.ajax({
                    url: getalllocations,
                    crossOrgin: true,    // use jsonp for cross origin request
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        for (var i = 1; i < size + 1; i++) {


                            $('#zonequestion' + data[i - 1].Zone_ID).attr("disabled", "disabled");
                        }
                    },
                    error: function () {
                        alert('failed');
                    }
                });
                $('#zoneTextbox').val('');
                document.getElementById("addZoneSubmit").disabled = true;
            });
            $('#usrnameAdd').val('');
            $('#pswAdd').val('');
            $('#updateCheck').attr("checked", false);
            $('#resultCheck').attr("checked", false);
            $('#superUserCheck').attr("checked", false);
            var url = "@Html.Raw(HttpUtility.JavaScriptStringEncode(url))";
            var allusernames = "@Html.Raw(HttpUtility.JavaScriptStringEncode(allusernames))";
            //alert('@ViewBag.newsignup');

            $.ajax({
                url: url,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    //YOUR CODE FOR AJAX SUCCESS
                    //console.log(data);
                    //sQ.html("<br>"+data.PIN+"<br>"+data.Name+"<br>"+data.Gender);
                    //alert(text);
                    //alert("success");
                    //alert(data);
                    console.log(data[0].Question);

                    size = data.length;

                    for (var i = 1; i < size+1; i++) {
                        document.getElementById("Data").innerHTML += "<label class=\"control-label col-xs-2\">" + i + "</label><div class=\"col-xs-7  col-sm-9 col-sm-pull-1\"><input id=question" + data[i - 1].qno + " disabled=\"disabled\" class = \"form-control col-sm-12\" type=\"text\" maxlength=\"100\" value=\'" + data[i - 1].Question + "\'></div><div id=edit" + data[i - 1].qno + " onclick=\"\" class=\"fa fa-pencil-square-o hand pull-left myClass \" style=\"font-size:20px; margin:6px 0px 0px -40px\"></div><div id=remove" + data[i - 1].qno + "  class=\"fa fa-times hand pull-left myClassRemove\" style=\"font-size:20px; margin:4px 0 0 -6px\"></div><br/><br/><br/>";

                    }


                        if ('@ViewBag.updatequestions' != "&quot;T") {
                            for (var i = 1; i < size + 1; i++)
                            {
                            //$('#update').show();
                                $('#edit' + data[i - 1].qno).hide();
                                $('#remove' + data[i - 1].qno).hide();

                        }
                    }


                    //f1(size);
                  //  alert(size);

                }, error: function (err) {
                    alert("Please Wait...");
                    // sQ.html("<br>"+pin+"<br>"+name);
                    // sQ.html(text);
                    console.log("error");
                }
            });
            $('#update').hide();
            $('#cancelUpdate').hide();
            if ('@ViewBag.updatequestions' == "&quot;T") {
                //$('#update').show();
                $('#addQuestion').show();
                $('#export').show();

            }
            else {
                //$('#update').hide();
                $('#addQuestion').hide();
                $('#export').hide();


            }
            if ('@ViewBag.newsignup' == "T&quot;") {
                $('#signup').show();
                $('#removeUser').show();
                $('#updatePrivilige').show();
            }
            else {
                $('#signup').hide();
                $('#removeUser').hide();
                $('#updatePrivilige').hide();
            }
            if ('@ViewBag.getresults' == "T") {
                $('#result').show();
            }
            else {
                $('#result').hide();
            }

            $.ajax({
                url: allusernames,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    var select = "";
                    console.log(data[0].Username);

                    size = data.length;
                    document.getElementById("allusernames").innerHTML = "";
                    for (var i = 1; i < size + 1; i++) {
                        document.getElementById("allusernames").innerHTML += "<label class=\"col-sm-2 checkbox\"  id=removeUserLabel" + i + " value=" + data[i - 1].Username + "> " + "<input id=removeUserCheckbox" + i + " type=\"checkbox\"></input>" + data[i - 1].Username + "</label><br/><br/><br/>";

                    }


                    $("#removeUserSubmit").click(function () {
                        var select = " ";
                        var temp1,labelId
                        for(var i=1;i<size+1;i++)
                        {
                            var temp = "removeUserCheckbox" + i;
                            if ($('#'+temp).is(':checked')) {
                                labelId = temp.replace("Checkbox", "Label");
                                temp1= document.getElementById(labelId).textContent;
                                select+=temp1+ "$";

                            }
                        }
                        select = select.replace(/\s/g, '');

                        var removeuser = "@Html.Raw(HttpUtility.JavaScriptStringEncode(removeuser))";
                        $.ajax({
                            url: removeuser+select,
                            crossOrgin: true,   // use jsonp for cross origin request
                            dataType: 'json',
                            type: 'GET',
                            success: function (data) {
                                console.log(data);
                               alert("The user is removed successfully");
                            }, error: function (err) {
                                alert("Please Wait...");
                                // sQ.html("<br>"+pin+"<br>"+name);
                                // sQ.html(text);
                                console.log("error");
                            }
                        });
                       // alert(select);
                    });

                    $("input[type=checkbox]").on("click", countChecked);
                    var countChecked = function () {
                        var n = $("input:checked");
                        //alert(n);

                        if (this.checked) {
                            //alert("check called");
                            var checkId = $(this).attr('id');

                            var labelId, temp;
                            if (checkId.indexOf("removeUserCheckbox") != -1) {
                                //alert(str2 + " found");
                                labelId = checkId.replace("Checkbox", "Label");
                                temp = document.getElementById(labelId).textContent;
                                select += temp + "$";
                            }
                            //var n = $("input:checked").length;
                            //$("div").text(n + (n === 1 ? " is" : " are") + " checked!");
                            //alert(n);
                        }

                    };

                }, error: function (err) {
                    alert("Please Wait...");

                    console.log("error");
                }
            });
        });



        $(document).on("click", ".myClass", function () {
            $('#update').show();
            $('#cancelUpdate').show();
            $('#addQuestion').hide();
            $('#signup').hide();
            $('#removeUser').hide();
            $('#updatePrivilige').hide();
            $('#result').hide();
            $('#export').hide();
            $('#configurelocation').hide();
            $('#Questionsset').hide();
            $('#Userset').hide();
            $('#Locationset').hide();
            var id = this.id;
            var editId = id.replace("edit", "question");
            //alert(editId);
            $('#'+editId).prop("disabled", false);
        });




        $(document).on("click", ".myClassRemove", function () {

            var id = this.id;
            var qn = id.replace("remove", "");
            //alert(qn);

            var address = "@Html.Raw(HttpUtility.JavaScriptStringEncode(deletequest))";
            var removeuser = "@Html.Raw(HttpUtility.JavaScriptStringEncode(removequestions))";
            $.ajax({
                url: address,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    console.log(data);
                    //alert("Question was deleted successfully");
                    $.ajax({
                        url: removeuser + qn,
                        crossOrgin: true, // use jsonp for cross origin request
                        dataType: 'json',
                        type: 'GET',
                        success: function (data) {
                            console.log(data);
                            //alert("Question was deleted successfully");

                            setTimeout("location.reload();", 1000);
                        }, error: function (err) {
                            alert("Please Wait...");
                            // sQ.html("<br>"+pin+"<br>"+name);
                            // sQ.html(text);
                            console.log("error");
                        }
                    });



                    //setTimeout("location.reload();", 1000);
                }, error: function (err) {
                   alert("Export failed make sure that MS Excel is installed");
                    // sQ.html("<br>"+pin+"<br>"+name);
                    // sQ.html(text);
                    console.log(err);
                }
            });






        });
        //zone info deleteion
        $(document).on("click", ".myzoneClassRemove", function () {
            var deletezone = "@Html.Raw(HttpUtility.JavaScriptStringEncode(deletezone))";

            var id = this.id;
            var qn = id.replace("zoneremove", "");
          //  alert(qn);
            $.ajax({
                url: deletezone+qn,

                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    //alert("Zone was removed successfully");
                }, error: function () {
                    alert("error");
                }
            });
            dispModal();
            //addZoneToDropDown();
            //setTimeout("window.location.reload();", 1000);
            //alert(qn);
        });
        //zone info updation
        $(document).on("click", ".myzoneClass", function () {
            $('#zoneaddQuestionSubmit').show();
            $('#cancelZoneButton').show();
            $('#addZone').hide();
            var id = this.id;
            var editId = id.replace("zoneedit", "zonequestion");
            //alert(editId);
            $('#' + editId).prop("disabled", false);
        });
        //zone info update
        function zoneinfoupdate() {

            var update = "";
            var updateqno = "";
            var questions = [];
            var str = "zonequestion"

            var getalllocations = "@Html.Raw(HttpUtility.JavaScriptStringEncode(getalllocations))";
            var updatingthezones = "@Html.Raw(HttpUtility.JavaScriptStringEncode(updatezonenames))";
            $.ajax({
                url: getalllocations,

                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {

                    size = data.length;
                    console.log(size);
                    //alert(size);
                    //dataSize = data.length;
                    for (var i = 1; i < size + 1; i++) {

                        questions[i] = document.getElementById(str + data[i - 1].Zone_ID).value;
                    }
                    for (var i = 1; i < size + 1; i++) {
                        update = update + questions[i] + "$";
                        updateqno = updateqno + data[i - 1].Zone_ID + "$";
                    }
                    console.log(update);
                    console.log(updateqno);

                   // alert(update);
                    //alert(updateqno);

                   // setTimeout("location.reload();", 1000);
                    $.ajax({
                        url: updatingthezones + size + "&feedback=" + update + "&questionno=" + updateqno,
                        crossOrgin: true, // use jsonp for cross origin request
                        dataType: 'json',
                        type: 'GET',
                        success: function (data) {
                            //alert("update successful");
                            //setTimeout("window.location.reload();",1000)
                        }, error: function (){
                            alert("Please Wait...");


                        }
                    });
                    //alert("Updated");
                    //setTimeout("('#configurelocation').click();", 1000);


                }, error: function (err) {
                    alert("Please Wait...");
                    console.log(url);
                    console.log("error");
                }
            });

            dispModal();
            //addZoneToDropDown();
        }
        function cancelUpdateFn()
        {
            window.location.reload();

        }

        function enable() {
            alert("clicked");
            //var editid = this.val();
            alert($(this).val);
        }
        function getallusernames()
        {
            var allusernames = "@Html.Raw(HttpUtility.JavaScriptStringEncode(allusernames))";
            $.ajax({
                url: allusernames,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    var select = "";
                    console.log(data[0].Username);

                    size = data.length;
                    document.getElementById("allusernames").innerHTML = "";
                    for (var i = 1; i < size + 1; i++) {
                        document.getElementById("allusernames").innerHTML += "<label class=\"col-sm-2 checkbox\"  id=removeUserLabel" + i + " value=\"usernames\"> " + "<input id=removeUserCheckbox" + i + " type=\"checkbox\"></input>" + data[i - 1].Username + "</label><br/><br/><br/>";
                    }

                   /* $("#removeUserSubmit").click(function () {
                        var select = "";
                        var temp1, labelId
                        for (var i = 1; i < size + 1; i++) {
                            var temp = "removeUserCheckbox" + i;
                            if ($('#' + temp).is(':checked')) {
                                labelId = temp.replace("Checkbox", "Label");
                                temp1 = document.getElementById(labelId).textContent;
                                select += temp1 + "$";
                            }
                        }


                        //alert(select);
                    });*/
                    $("input[type=checkbox]").on("click", countChecked);
                    var countChecked = function () {
                        var n = $("input:checked");
                        //alert(n);

                        if (this.checked) {
                            //alert("check called");
                            var checkId = $(this).attr('id');

                            var labelId, temp;
                            if (checkId.indexOf("removeUserCheckbox") != -1) {
                                //alert(str2 + " found");
                                labelId = checkId.replace("Checkbox", "Label");
                                temp = document.getElementById(labelId).textContent;

                            }
                            //var n = $("input:checked").length;
                            //$("div").text(n + (n === 1 ? " is" : " are") + " checked!");
                            //alert(n);
                        }

                    };

                }, error: function (err) {
                    alert("Please Wait...");

                    console.log("error");
                }
            });
        }
        function updatelocationinfo()
        {
            $('#addZone').show();
            $('#addZoneDiv').hide();
            $('#availableZones').show();
            $('#zoneaddQuestionSubmit').hide();
            $('#zoneTextbox').val('');
            var getalllocations = "@Html.Raw(HttpUtility.JavaScriptStringEncode(getalllocations))";
            $.ajax({
                url: getalllocations,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data)
                {
                    size = data.length;
                    numberoflocations = size;

                    document.getElementById("locationconfiguration").innerHTML = "";
                    for (var i = 1; i < size + 1 ; i++) {
                     //   document.getElementById("zones").innerHTML += "<option value=\'" + data[i - 1].Zone_Name + "\'>" + data[i - 1].Zone_Name + "</option>";
                        document.getElementById("locationconfiguration").innerHTML += "<label class=\"control-label col-xs-2\">" + i + "</label><div class=\"col-xs-7 col-sm-9 col-sm-pull-1\"><input id=zonequestion" + data[i - 1].Zone_ID + " disabled=\"disabled\" class = \"form-control col-sm-12 \" type=\"text\" maxlength=\"100\" value=\'" + data[i - 1].Zone_Name + "\' onkeyup=converttouppercase(this.id)></div><div id=zoneedit" + data[i - 1].Zone_ID + " onclick=\"\" class=\"fa fa-pencil-square-o hand pull-left myzoneClass \" style=\"font-size:20px\"></div><div id=zoneremove" + data[i - 1].Zone_ID + "  class=\"fa fa-times hand pull-left myzoneClassRemove\" style=\"font-size:20px\"></div><br/><br/><br/>";



                    }
                }, error: function () { }
            });
        }
        function updateuserpriviliges()
        {
            var allusernames = "@Html.Raw(HttpUtility.JavaScriptStringEncode(allusernames))";
            $.ajax({
                url: allusernames,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    var select = "";
                    console.log(data[0].Username);

                    size = data.length;
                    console.log(size);
                    document.getElementById("updateuserprivilige").innerHTML = "";
                    for (var i = 1; i < size + 1; i++) {
                        document.getElementById("updateuserprivilige").innerHTML += "<div class=\"row\"><label class=\"col-sm-12 pull-left\"  id=userprivilige" + i + " value=" + data[i - 1].Username + ">" + "User Name: " + data[i - 1].Username + "</label></div><div class=\"row\"> <label class=\"checkbox-inline no_indent\"><input id=updatequestionsprivilige" + i + " type=\"checkbox\"></input>Update&nbsp;Questions&nbsp;</label><label class=\"checkbox-inline no_indent\"><input id=viewresultsprivilige" + i + " type=\"checkbox\"></input>View&nbsp;Results&nbsp;</label><label class=\"checkbox-inline no_indent\"><input id=newsignuppermissionprivilige" + i + " type=\"checkbox\"></input>Add/Remove&nbsp;User&nbsp;</label></div><br/>";
                    }
                    for (var i = 1; i < size+1 ; i++)
                    {
                        if(data[i-1].Questions_Update=='T')
                        {
                            $('#updatequestionsprivilige' + i).attr('checked', true);
                        }
                        if(data[i-1].View_Results=='T')
                        {
                            $('#viewresultsprivilige' + i).attr('checked', true);
                        }
                        if (data[i - 1].New_Signup == 'T') {
                            $('#newsignuppermissionprivilige' + i).attr('checked', true);
                        }
                    }





                    $("input[type=checkbox]").on("click", countChecked);
                    var countChecked = function () {
                        var n = $("input:checked");
                        //alert(n);

                        if (this.checked) {
                            //alert("check called");
                            var checkId = $(this).attr('id');

                            var labelId, temp;
                            if (checkId.indexOf("removeUserCheckbox") != -1) {
                                //alert(str2 + " found");
                                labelId = checkId.replace("Checkbox", "Label");
                                temp = document.getElementById(labelId).textContent;

                            }
                            //var n = $("input:checked").length;
                            //$("div").text(n + (n === 1 ? " is" : " are") + " checked!");
                            //alert(n);
                        }

                    };

                }, error: function (err) {
                    alert("Please Wait...");

                    console.log("error");
                }
            });

        }
        function addQuestionFn() {
            function formatDate(date) {
                var hours = date.getHours();
                var minutes = date.getMinutes();
                var mil = date.getSeconds();
                var ampm = hours=>12 ? 'pm' : 'am';
                hours = hours % 12;
                hours = hours ? hours : 12; // the hour '0' should be '12'
                minutes = minutes < 10 ? '0' + minutes : minutes;
                var strTime = hours + ':' + minutes + ':' + mil
                return date.getMonth() + 1 + "-" + date.getDate() + "-" + date.getFullYear() + " " + strTime;
            }

            var d = new Date();
            var e = formatDate(d);
            //alert("add called");
            var adduser = "@Html.Raw(HttpUtility.JavaScriptStringEncode(addQuest))";
            var valueOfText = document.getElementById("questionTextbox").value;
            //alert(valueOfText);
            $.ajax({

                url: adduser + valueOfText+"&Dt="+e,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    setTimeout("location.reload(true);", 1000);
                   // alert("Question added successfully");
                    //alert(url);

                }, error: function (err) {


                    console.log("error");
                }
            });


        }
        function exportfeedback()
        {
            var exportfeedback = "@Html.Raw(HttpUtility.JavaScriptStringEncode(exportfeedback))";
            $.ajax({

                url: exportfeedback,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                   // setTimeout("location.reload(true);", 1000);
                    // alert("Question added successfully");
                    alert("Export Successful");

                }, error: function (err) {

                    alert("Export failed make sure that MS Excel is installed");
                    console.log("error");
                }
            });
        }
        function UpdateUsers() {
           // alert("called");


            //alert(updateCheck);
            $(document).on("click", ".myClass1", function () {
                var allusernames = "@Html.Raw(HttpUtility.JavaScriptStringEncode(allusernames))";

                $.ajax({
                    url: allusernames,
                    crossOrgin: true,    // use jsonp for cross origin request
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        var select = "";
                        console.log(data[0].Username);
                        dataSize = data.length;
                        //alert(dataSize);

                        //alert($('#hiddenInput').val);
                        size = data.length;
                        console.log(size);
                        var updateCheck, resultCheck, userCheck;
                        for (var i = 1; i < data.length + 1; i++) {
                            if ($("#updatequestionsprivilige"+i).prop('checked') == true) {
                                updateCheck = "T";
                            }
                            else {
                                updateCheck = "F";
                            }
                            if ($("#viewresultsprivilige" + i).prop('checked') == true) {
                                resultCheck = "T";
                            }
                            else {
                                resultCheck = "F";
                            }
                            if ($("#newsignuppermissionprivilige" + i).prop('checked') == true) {
                                //alert("Checked");
                                userCheck = "T";
                            }
                            else {
                                userCheck = "F";
                            }

                            //alert(updateCheck + resultCheck + userCheck);
                            var allusernames = "@Html.Raw(HttpUtility.JavaScriptStringEncode(updateUserPrivilige))";

                            $.ajax({
                                url: allusernames +"Username="+ data[i-1].Username+"&Password="+data[i-1].Password+"&Questions_Update="+updateCheck+"&View_Results="+resultCheck+"&New_Signup="+userCheck,

                                crossOrgin: true,      // use jsonp for cross origin request
                                dataType: 'json',
                                type: 'GET',

                                success: function (data) {


                                    //alert("Updated");

                                }, error: function (err) {
                                    alert("Please Wait...");
                                    console.log(url);
                                    console.log("error");
                                }
                            });
                        }



                    }, error: function (err) {
                        alert("Please Wait...");

                        console.log("error");
                    }
                });

                if ($("#newsignuppermissionprivilige1").prop('checked') == true) {
                    //do something
                    //alert($('#hiddenInput').val);
                    //alert(data.length);
                }
            });



            setTimeout("window.location.reload();", 1000);

       }
        function f2()
        {
            var url = '@Url.Action("FeedbackResult", "Home")';
            window.location.href = url;
        }
      function signout()
      {
          var url = '@Url.Action("Sample","Home")';
          window.location.href = url;
      }
        function reloadfunction()
        {
            setTimeout("window.location.reload();", 1000);
        }

        function f1()
        {
            $('#update').hide();
            $('#addQuestion').show();
            $('#signup').show();
            $('#removeUser').show();
            $('#updatePrivilige').show();
            $('#result').show();
            var update = "";
            var updateqno = "";
            var questions = [];
            var str = "question"

            var url123 = "@Html.Raw(HttpUtility.JavaScriptStringEncode(url))";
            $.ajax({
                url: url123,

                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',



                success: function (data) {

                    size = data.length;
                    console.log(size);
                    //dataSize = data.length;
                    for (var i = 1; i < size + 1; i++) {

                        questions[i] = document.getElementById(str+data[i-1].qno).value;
                    }
                    for (var i = 1; i < size + 1; i++) {
                        update = update + questions[i] + "$";
                       updateqno = updateqno + data[i - 1].qno + "$";
                    }
                    console.log(update);
                    console.log(updateqno);
                    //alert(url1);

                 $.ajax({
                        url: url1 + size + "&feedback=" + update+"&questionno="+updateqno,
                        crossOrgin: true, // use jsonp for cross origin request
                        dataType: 'json',
                        type: 'GET',
                        success: function (data) {
                            //YOUR CODE FOR AJAX SUCCESS
                            //console.log(data);
                            //sQ.html("<br>"+data.PIN+"<br>"+data.Name+"<br>"+data.Gender);
                            //alert(text);
                            //alert("success");
                            //alert(data);
                            //alert("Feedbacks Questionaires are successfully updated");

                            //  window.location.href = url;
                            console.log(data);


                        }, error: function (err) {
                          //  alert("Please Wait...");
                            // sQ.html("<br>"+pin+"<br>"+name);
                            // sQ.html(text);
                            console.log("error");
                            console.log(err);
                        }
                    });

                 setTimeout("location.reload();", 1000);

                    //alert("Updated");

                }, error: function (err) {
                    alert("Please Wait...");
                    console.log(url);
                    console.log("error");
                }
            });
        }

        //close function call for zone configuration
        function closefunction()
        {
            var getalllocations = "@Html.Raw(HttpUtility.JavaScriptStringEncode(getalllocations))";
            $.ajax({
                url: getalllocations,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    for (var i = 1; i < size + 1; i++) {


                        $('#zonequestion' + data[i - 1].Zone_ID).attr("disabled", "disabled");
                    }
                },
                error: function () {
                    alert('failed');
                }
            });
        }
    </script>
    <script>
        var size;
        var url1 = "@Html.Raw(HttpUtility.JavaScriptStringEncode(url1))";
         var isvalid = 0,isvalidRemove=0;
        $(document).ready(function () {


            $('#usrnameAdd').keyup(function () {
                if ($(this).val().length != 0) {
                    isvalid = 1;
                }
                else {
                    isvalid = 0;
                }
            });
            $('#pswAdd').keyup(function () {
                if ($(this).val().length != 0 && isvalid == 1) {
                    $('#addUserSubmit').attr('disabled', false);
                }
                else {
                    $('#addUserSubmit').attr('disabled', true);
                }
            });


            $('#addUserSubmit').attr('disabled', true);

            $("#addUserSubmit").click(function () {
                //alert('click');
                var user, pwd, update, result, superUser;
                user = $("#usrnameAdd").val();
                pwd = $("#pswAdd").val();


                if (document.getElementById('updateCheck').checked) {
                    update = "T";
                }
                else {
                    update = "F";
                }
                if (document.getElementById('resultCheck').checked) {
                    result = "T";
                }
                else {
                    result = "F";
                }
                if (document.getElementById('superUserCheck').checked) {
                    superUser = "T";
                }
                else {
                    superUser = "F";

                }
                var adduser = "@Html.Raw(HttpUtility.JavaScriptStringEncode(adduser))";
                $.ajax({

                    url: adduser + "username=" + user + "&password=" + pwd + "&questionsupdate=" + update + "&getresults=" + result + "&newsignup=" + superUser,
                    crossOrgin: true,    // use jsonp for cross origin request
                    dataType: 'json',
                    type: 'GET',
                    success: function (data) {
                        console.log(data);
                        if (data == "1")
                            {
                            alert("User is added successfully");
                            //setTimeout("window.location.reload();", 1000);
                            $('#usrnameAdd').val('');
                            $('#pswAdd').val('');
                            $('#updateCheck').attr("checked", false);
                            $('#resultCheck').attr("checked", false);
                            $('#superUserCheck').attr("checked", false);
                        }
                        if (data == "0")
                            alert("This user name is already exist. Please try again with a new name");
                        console.log(data);


                    }, error: function (err) {
                        alert("This user name is already taken. Please use some other name");

                        console.log("error");
                    }
                });
            });






        });

        function addingzonemodal()
        {
            //$('#myModalAddZone').modal('show');
            //$('#zoneconfig').modal('hide');
            $('#addZoneDiv').show();
            $('#availableZones').hide();
        }
        $(document).ready(function () {
            $(window).keydown(function (event) {
                if (event.keyCode == 13) {
                    event.preventDefault();
                    return false;
                }
            });
        });
        function addzonefunction()
        {
            var tempzone = $('#zoneTextbox').val();

            //alert(tempzone);
            var addzones = "@Html.Raw(HttpUtility.JavaScriptStringEncode(addzones))";
            $.ajax({
                url: addzones+tempzone,
                crossOrgin: true, // use jsonp for cross origin request
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    //alert("New Zone was added successfully");
                },
                error: function () {
                    alert('failed');
                }
            });
            //setTimeout("window.location.reload();", 1000);
            dispModal();
            //addZoneToDropDown();

        }
        function dispModal() {

            setTimeout("$('#configurelocation').click();", 1000);
            //document.getElementById("addZoneSubmit").disabled = true;
        }
        function cancelZoneUpdate()
        {
            dispModal();
        }

    </script>


</head>
<body>


    <div id="ui-preview">
        <h1>Feedback Questions</h1>
        <div class="signout" onclick="signout()"><a href="#">Sign out</a></div>
        <div class="row col-sm-12">
            <div class="col-sm-6">
               
                
                <fieldset id="Questionsset">
                    <legend>Questions</legend>
                    <form class="form-inline">
                        <div class="form-group">
                            <button type="button" class="btn btn-primary btn-green" id="addQuestion" value="UPDATE QUESTIONS" data-toggle="modal" data-target="#myModalAddQuestion" onclick="">ADD QUESTION</button>
                            <button type="button" class="btn btn-primary" id="result" value="UPDATE QUESTIONS" onclick="f2();">VIEW RESULTS</button>
                        </div>
                       
                    </form>
                </fieldset>
                <fieldset id="Userset">
                    <legend>User</legend>
                    <form class="form-inline">
                        <div class="form-group">
                            <button type="button" class="btn btn-primary btn-green" id="signup" value="UPDATE QUESTIONS" data-toggle="modal" data-target="#myModal">ADD NEW USER</button>
                            <button type="button" class="btn btn-primary btn-orange" id="removeUser" value="UPDATE QUESTIONS" data-toggle="modal" data-target="#myModalRemove" onclick="getallusernames()">REMOVE USER</button>
                            <button type="button" class="btn btn-primary btn-blue" id="updatePrivilige" value="Update Privilige" data-toggle="modal" data-target="#myModalupdateprivilige" onclick="updateuserpriviliges()">UPDATE USER PRIVILIGE</button>
                        </div>
                    </form>
                </fieldset>
                <fieldset id="Locationset">
                    <legend>Location</legend>
                    <form class="form-inline">
                        <div class="form-group">
                            <label>Current Location</label><br/>
                            <select class="form-control my1" id="zones" name="Select location" value="select location">
                                <option value="">Please select one location</option>
                            </select><br/>
                            <button type="button" class="btn btn-primary btn-green" id="configurelocation" value="Zone Configuraion" data-toggle="modal" data-target="#zoneconfig" onclick="updatelocationinfo()">LOCATION CONFIGURATION</button>
                        </div>
                    </form>
                </fieldset>
            </div>

            <div class="col-sm-6" style='overflow:auto;height:500px;'>
                <fieldset>
                    <legend>Questions</legend>
                    <form class="form-inline" id="Data" ></form>
                    <center >
                        <button type="button" class="btn btn-primary" id="cancelUpdate" value="UPDATE QUESTIONS" onclick="cancelUpdateFn()">CANCEL</button>
                        <button type="button" class="btn btn-primary btn-blue" id="update" value="UPDATE QUESTIONS" onclick="f1();">UPDATE QUESTIONS</button>
                    </center>
                </fieldset>
            </div>
          <!-- <div style="position:absolute; bottom:0; right: 0; padding:10px;"><img src="~/Pictures/powered.gif" /></div>-->
            <div style="float:right; bottom:0; right: 0; padding:10px;">© 2016 powered by Honeywell</div>
        </div>

        



        <!--<form class="form-horizontal">

            <center><div id="d1"></div></center>
        </form>
        <center>


            <button type="submit" class="btn btn-primary" id="result" value="UPDATE QUESTIONS" onclick="f2();">VIEW RESULTS</button>-->


    </div>
    <div class="modal fade" id="zoneconfig" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Location Configuration</h4>
                </div>
                <div class="modal-body">
                    <div id="availableZones">
                        <form class="form-horizontal">
                            <center>
                                <div id="locationconfiguration">

                                </div>
                            </center>
                        </form>
                        <center>
                           
                            <button type="button" class="btn btn-primary" id="addZone" onclick="addingzonemodal()">Add Location</button>

                            <button type="button" id="zoneaddQuestionSubmit" class="btn btn-primary" onclick="zoneinfoupdate()">Update Location Name</button>


                        </center>
                    </div>
                    <div id="addZoneDiv">
                        <form role="form">
                            <div class="form-group">
                                <label for="zone">Location Name</label>
                                <input type="text" class="form-control" id="zoneTextbox" placeholder="Enter Location" autocomplete="off" maxlength="15">
                            </div>
                            <br />
                            <button type="button" class="btn btn-success btn-block" id="addZoneSubmit" onclick="addzonefunction()"> Add Location</button>
                        </form>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>
    <div class="modal fade" id="myModalRemove" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Remove User</h4>
                </div>
                <div class="modal-body">
                    <div id="allusernames" class="modal-body">

                    </div>
                    <button type="button" class="btn btn-danger btn-block" id="removeUserSubmit" data-dismiss="modal"> Remove Users</button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>
    <div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add New User</h4>
                </div>
                <div class="modal-body">
                    <form role="form">
                        <div class="form-group">
                            <label for="usrnameAdd"><span class="glyphicon glyphicon-user"></span> Username</label>
                            <input type="text" class="form-control" id="usrnameAdd" placeholder="Enter User Name" autocomplete="off" maxlength="30">
                        </div>
                        <div class="form-group">
                            <label for="pswAdd"><span class="glyphicon glyphicon-eye-open"></span> Password</label>
                            <input type="password" class="form-control" id="pswAdd" placeholder="Enter password" autocomplete="off">
                        </div>
                        <label>Permissions</label>
                        <div class="checkbox">
                            <label><input type="checkbox" value="" id="updateCheck">Can Update Questions</label>
                        </div>
                        <div class="checkbox">
                            <label><input type="checkbox" value="" id="resultCheck">Can View Results</label>
                        </div>
                        <div class="checkbox">
                            <label><input type="checkbox" value="" id="superUserCheck">Can Add or Remove Users</label>
                        </div>
                        <button type="button" class="btn btn-success btn-block" id="addUserSubmit" data-dismiss="modal"> Add User</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>

    <div class="modal fade" id="confirmdialog" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Are you sure want to update the questions?</h4>
                </div>
                <div class="modal-body">
                    <h6>All the patient feedback data will be erased and exported to excel sheet </h6>
                    <center>
                        <button type="button" class="btn btn-success" id="removeUserSubmit" data-dismiss="modal" onclick="f1();"> Confirm</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal" onclick="reloadfunction()">Cancel</button>
                    </center>
                </div>


            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>


    <div class="modal fade" id="myModalupdateprivilige" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Update user privilige</h4>
                </div>
                <div class="modal-body">
                    <div id="updateuserprivilige" class="modal-body">

                    </div>
                    <button type="button" class="btn btn-danger btn-block myClass1" id="upateuserprivilige" data-dismiss="modal" onclick="UpdateUsers()"> Update user priviliges</button>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>
    <div class="modal fade" id="myModalAddZone" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Zone Wizard</h4>
                </div>
                <div class="modal-body">
                    <form role="form">
                        <div class="form-group">
                            <label for="zone">Zone Name</label>
                            <input type="text" class="form-control" id="zoneTextbox" placeholder="Enter Zone" autocomplete="off" maxlength="15">
                        </div>
                        <button type="submit" class="btn btn-success btn-block" id="addZoneSubmit" onclick="addzonefunction()"> Add Zone</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
    </div>
    <div class="modal fade" id="myModalAddQuestion" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Question</h4>
                </div>
                <div class="modal-body">
                    <form role="form">
                        <div class="form-group">
                            <label for="question">Question</label>
                            <input type="text" class="form-control" id="questionTextbox" placeholder="Enter Question" autocomplete="off" maxlength="100">
                        </div>
                        <br/>
                        <button type="submit" class="btn btn-success btn-block" id="addQuestionSubmit" data-dismiss="modal" onclick="addQuestionFn()"> Add Question</button>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                </div>
            </div>

        </div>
      
    </div>
</body>
</html>
